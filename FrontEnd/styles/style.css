.player {
  display: grid;

  grid-template-columns: 0% 5% 90% 5%;
  /* 20% 5% 70% 5%; */
  grid-template-rows: 60% 40%;
  grid-column-gap: 0px;
  grid-row-gap: 0px;

  z-index: 50;
  position: fixed;
  right: 1%;
  overflow: hidden;
  bottom: 1%;

  align-items: center;

  background-color: #484e6a;

  width: 400px;
  /*450px;*/
  padding: 0px 15px;
  height: 75px;

  object-position: center;

  border-radius: 25px;
}

.albumTitle {
  font-size: 1.25em;
}

.albumArtist {
  font-size: 0.85em;
}

::-webkit-scrollbar {
  width: 12px;
  /* for vertical scrollbars */
  height: 12px;
  /* for horizontal scrollbars */
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.5);
}

#songProgress {
  margin: 0px 10px;
  overflow: hidden;
  grid-area: 2/3/3/4;
  border-radius: 10px;
  background: rgba(255, 255, 255, 0.2);

}

.myBar {
  width: 0%;
  height: 10px;
  background-color: green;
  border-radius: 10px;
}

.player>.title {
  text-align: center;
  grid-area: 1 / 2 / 2 / 5;
}

.player>.controls {
  grid-area: 1/1/3/2;
}

.player>.curTime {
  font-size: 0.75em;
  grid-area: 2 / 2 / 3 / 3;
}

.player>.endTime {
  font-size: 0.75em;
  grid-area: 2 / 4 / 3 / 5;
}

body {
  color: #ddd;
  background-color: #2b2e3b;

  font-family: Arial, Helvetica, sans-serif;
}

.grid:after {
  content: "";
  display: table;
  clear: both;
}

.grid-container {
  display: grid;
  grid-template-columns: 2.5% 92.5% 5%;
  grid-template-rows: auto auto auto;
  gap: 0px 0px;
  grid-template-areas: ". . .";
}

/* #grid {
  height: 90%;
  overflow: hidden;
} */

.column>.info>* {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  width: 75%;
  font-family: "Open Sans Semibold", "Helvetica Neue", Helvetica,
    Arial, sans-serif;
  font-size: 0.75em;
  height: 1.5em;
  margin: 0px;
  padding: 0px;
}

* {
  cursor: default;
}

.listRow {
  display: flex;
  height: 40px;
  align-items: center;
}

.listRow:hover {
  background: rgba(255, 255, 255, 0.45);
}

.trackNum {
  text-align: center;
  position: absolute;
  width: 42px;
}

.trackName {
  width: 250px;
  padding-left: 62px;
  flex-grow: 2;
}

.trackDur {
  padding-right: 21px;
}

.trackList {
  transform: translate3d(50px, 0px, 0px);
  width: calc(100% - 100px);
  position: absolute;
}

.column>.info>p {
  color: rgba(255, 255, 255, 0.45);
}

.column>.info>h2 {
  padding-top: 10px;
}

.column>.cover {
  position: relative;
  width: 100%;
  /* The size you want */
}

.column>.cover:after {
  content: "";
  display: block;
  padding-bottom: 100%;
  /* The padding depends on the width, not on the height, so with a padding-bottom of 100% you will get a square */
}

.column>.cover>img {
  position: absolute;
  /* Take your picture out of the flow */
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  /* Make the picture taking the size of it's parent */
  width: 100%;
  /* This if for the object-fit */
  height: 100%;
  /* This if for the object-fit */
  object-fit: cover;
  /* Equivalent of the background-size: cover; of a background-image */
  object-position: center;
  background: rgba(143, 143, 143, 0.15);
  border-radius: 5px;
  box-sizing: border-box;
}

.column>.cover>img:hover {
  border-width: 2px;
  border-style: solid;
  border-color: orangered;
}

.column {
  float: left;
  width: calc((calc(100%) - (20px * 12)) / 12);
  padding: 10px;
}

@media screen and (max-width: 1760px) {
  .column {
    width: calc((calc(100%) - (20px * 11)) / 11);
  }
}

@media screen and (max-width: 1600px) {
  .column {
    width: calc((calc(100%) - (20px * 10)) / 10);
  }
}

@media screen and (max-width: 1440px) {
  .column {
    width: calc((calc(100%) - (20px * 9)) / 9);
  }
}

@media screen and (max-width: 1280px) {
  .column {
    width: calc((calc(100%) - (20px * 8)) / 8);
  }
}

@media screen and (max-width: 1120px) {
  .column {
    width: calc((calc(100%) - (20px * 7)) / 7);
  }
}

@media screen and (max-width: 960px) {
  .column {
    width: calc((calc(100%) - (20px * 6)) / 6);
  }
}

@media screen and (max-width: 800px) {
  .column {
    width: calc((calc(100%) - (20px * 5)) / 5);
  }
}

@media screen and (max-width: 640px) {
  .column {
    width: calc((calc(100%) - (20px * 4)) / 4);
  }
}

@media screen and (max-width: 480px) {
  .column {
    width: calc((calc(100%) - (20px * 3)) / 3);
  }
}

@media screen and (max-width: 320px) {
  .column {
    width: calc((calc(100%) - (20px * 2)) / 2);
  }
}

@media screen and (max-width: 160px) {
  .column {
    width: calc((calc(100%) - (20px * 1)) / 1);
  }
}

body {
  margin: 0;
  padding: 0;
}

body {
  color: #ddd;
  background-color: #2b2e3b;

  font-family: Arial, Helvetica, sans-serif;
}

.grid:after {
  content: "";
  display: table;
  clear: both;
}

/* #grid {
  height: 90%;
  overflow: hidden;
} */

.column>.info>* {
  width: 75%;
}

.info>* {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  font-family: "Open Sans Semibold", "Helvetica Neue", Helvetica,
    Arial, sans-serif;
  font-size: 0.75em;
  height: 1.5em;
  margin: 0px;
  padding: 0px;
}

.info>p {
  color: rgba(255, 255, 255, 0.45);
}

.info>h2 {
  padding-top: 10px;
}

.column>.cover {
  position: relative;
  width: 100%;
  /* The size you want */
}

.column>.cover:after {
  content: "";
  display: block;
  padding-bottom: 100%;
  /* The padding depends on the width, not on the height, so with a padding-bottom of 100% you will get a square */
}

.column>.cover>img {
  position: absolute;
  /* Take your picture out of the flow */
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  /* Make the picture taking the size of it's parent */
  width: 100%;
  /* This if for the object-fit */
  height: 100%;
  /* This if for the object-fit */
  object-fit: cover;
  /* Equivalent of the background-size: cover; of a background-image */
  object-position: center;
  background: rgba(143, 143, 143, 0.15);
  border-radius: 5px;
  box-sizing: border-box;
}

.column>.cover>img:hover {
  border-width: 2px;
  border-style: solid;
  border-color: orangered;
}

.column {
  float: left;
  width: calc((calc(100%) - (20px * 12)) / 12);
  padding: 10px;
}

@media screen and (max-width: 1760px) {
  .column {
    width: calc((calc(100%) - (20px * 11)) / 11);
  }
}

@media screen and (max-width: 1600px) {
  .column {
    width: calc((calc(100%) - (20px * 10)) / 10);
  }
}

@media screen and (max-width: 1440px) {
  .column {
    width: calc((calc(100%) - (20px * 9)) / 9);
  }
}

@media screen and (max-width: 1280px) {
  .column {
    width: calc((calc(100%) - (20px * 8)) / 8);
  }
}

@media screen and (max-width: 1120px) {
  .column {
    width: calc((calc(100%) - (20px * 7)) / 7);
  }
}

@media screen and (max-width: 960px) {
  .column {
    width: calc((calc(100%) - (20px * 6)) / 6);
  }
}

@media screen and (max-width: 800px) {
  .column {
    width: calc((calc(100%) - (20px * 5)) / 5);
  }
}

@media screen and (max-width: 640px) {
  .column {
    width: calc((calc(100%) - (20px * 4)) / 4);
  }
}

@media screen and (max-width: 480px) {
  .column {
    width: calc((calc(100%) - (20px * 3)) / 3);
  }
}

@media screen and (max-width: 320px) {
  .column {
    width: calc((calc(100%) - (20px * 2)) / 2);
  }
}

@media screen and (max-width: 160px) {
  .column {
    width: calc((calc(100%) - (20px * 1)) / 1);
  }
}

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

.stats {
  display: inline;
}


.albumStats {
  display: flex;
  width: 100%;
  align-items: flex-start;
  margin: 0px 50px;
}


.albumStats>img {
  width: 250px;
  border-radius: 5px;
  height: 250px;
  margin-right: 50px;
}

.albumStats>div {
  height: 250px;
  padding-right: 100px;
  width: 100%;
}

.albumView {
  display: none;
}

.albumDescription {
  overflow-y: scroll;
  height: 40%;
  width: 100%;
}


.title:hover>.buttons {
  opacity: 1;
}

.title:hover>.info {
  opacity: 0;
}

.title>.info {

  transition: opacity .5s ease;
  opacity: 1;
}


.title {
  position: relative;
  margin-top: 10px;
}

#songTitle>h2 {
  padding: 0px;
}

.title>.buttons {
  z-index: 20;
  transition: opacity .5s ease;
  opacity: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  text-align: center;
}